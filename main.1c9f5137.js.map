{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","labelForInput","createElement","className","htmlFor","id","value","name","i","length","toUpperCase","split","join","textContent","placeholder","parentElement","append"],"mappings":";AAAA,aAuBC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArBD,IAqBC,EArBKA,EAAaC,EAAAA,SAASC,iBAAiB,UAEzBF,EAAAA,EAAAA,GAmBnB,IAnB2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MACpBC,EAAgBH,SAASI,cAAc,SAE7CD,EAAcE,UAAY,cAC1BF,EAAcG,QAAUJ,EAAMK,GAIzB,IAFDC,IAAAA,EAAQN,EAAMO,KAETC,EAAI,EAAGA,EAAIR,EAAMO,KAAKE,OAAQD,IACjCR,EAAMO,KAAKC,KAAOR,EAAMO,KAAKC,GAAGE,gBAClCJ,EAAQN,EAAMO,KAAKI,MAAMX,EAAMO,KAAKC,IAAII,KAASZ,IAAAA,OAAAA,EAAMO,KAAKC,MAIhEP,EAAcY,YAAcP,EAE5BN,EAAMc,YAAcd,EAAMO,KAE1BP,EAAMe,cAAcC,OAAOf,IAC5B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.1c9f5137.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\nfor (const input of inputs) {\n  const labelForInput = document.createElement('label');\n\n  labelForInput.className = 'field-label';\n  labelForInput.htmlFor = input.id;\n\n  let value = input.name;\n\n  for (let i = 0; i < input.name.length; i++) {\n    if (input.name[i] === input.name[i].toUpperCase()) {\n      value = input.name.split(input.name[i]).join(` ${input.name[i]}`);\n    }\n  }\n\n  labelForInput.textContent = value;\n\n  input.placeholder = input.name;\n\n  input.parentElement.append(labelForInput);\n}\n"]}